---

- name: Install gammurc file
  template:
    src:   gammurc.j2
    dest:  '{{ gammu_smsd__gammurc_file }}'
    owner: root
    group: root
    mode:  0644

- name: Install gammu-smsdrc file
  template:
    src:   gammu-smsdrc.j2
    dest:  '{{ gammu_smsd__gammusmsdrc_file }}'
    owner: root
    group: root
    mode:  0644
  notify: [ 'restart-gammu-smsd' ]

- name: Test gammu log file
  stat:
    path: '{{ gammu_smsd__gammu_logfile }}'
  when: gammu_smsd__gammu_logfile is defined
  register: _gammu_smsd__gammu_log
  check_mode: no

- name: Init gammu log file
  file:
    path:  '{{ gammu_smsd__gammu_logfile }}'
    owner: '{{ gammu_smsd__user }}'
    group: '{{ gammu_smsd__group }}'
    state: touch
  when: gammu_smsd__gammu_logfile is defined and (
      not _gammu_smsd__gammu_log.stat.exists or 
      (gammu_smsd__user is defined and _gammu_smsd__gammu_log.stat.pw_name != gammu_smsd__user ) or
      (gammu_smsd__group is defined and _gammu_smsd__gammu_log.stat.gr_name != gammu_smsd__group )
    )
  notify: [ 'restart-gammu-smsd' ]

- name: Test right of serial device
  stat:
    path: '{{ gammu_smsd__gammu_device }}'
  when: gammu_smsd__gammu_device is defined
  register: _gammu_smsd__device
  check_mode: no

- name: Check the value of the device group
  fail:
    msg: "The group of the device file is incorrect"
  when: gammu_smsd__gammu_device is defined and ( _gammu_smsd__device.stat.gr_name is not defined or _gammu_smsd__device.stat.gr_name|length == 0 )

- name: Check the group of the serial device for forbidden groups
  fail:
    msg: "The peripheral device {{ gammu_smsd__gammu_device }} is group owned by root"
  when: gammu_smsd__gammu_device is defined and (_gammu_smsd__device.stat.gr_name == 'root' or _gammu_smsd__device.stat.gid == 0)

- name: "Adding '{{ gammu_smsd__user }}' user to device group '{{ _gammu_smsd__device.stat.gr_name }}'"
  user:
    name: '{{ gammu_smsd__user }}'
    groups: '{{ _gammu_smsd__device.stat.gr_name }}'
    append: yes
  when: gammu_smsd__gammu_device is defined

#- name: Initialise sqlite database
  #include: init_sqlite_database.yml
  #when: gammu_smsd__smsd_db_service == 'SQL' and gammu_smsd__smsd_db_sql_driver == 'sqlite3'

- name: Configure crontab jobs
  cron:
    name: 'GAMMU_SMSD-PHONE-MONITORING'
    minute: '*/10'
    job: '(date --rfc-3339=ns; /usr/bin/gammu-smsd-monitor --use-log -C --loops 1) > {{ gammu_smsd__gammusmsd_var_dir }}phones_status'
    user: '{{ gammu_smsd__user }}'
    cron_file: '{{ gammu_smsd__cron_file }}'
    state: "{{ 'present' if gammu_smsd__smsd_monitoring_cron else 'absent' }}"
